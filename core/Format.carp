(defdynamic fmt-internal [s args]
  (let [idx (String.index-of s \%)
        len (String.count s)]
    (cond
      (= idx -1) s ; no more splits found, just return string
      (= \% (String.char-at s (inc idx))) ; this is an escaped %
        (list 'String.append
              (String.substring s 0 (+ idx 2))
              (fmt-internal (String.substring (+ idx 2) len)))
      (= 0 (count args)) ; we need to insert something, but have nothing
        (macro-error "error in format string: not enough arguments for format string")
      ; okay, this is the meat:
      ; get the next % after our escaper
      (let [next (String.index-of (String.substring s (inc idx) len) \%)]
        (if (= 0 next)
          (list 'fmt slice (car args))
          (let [offs (+ (inc idx) 1)
                slice (String.substring s 0 offs)]
            (list 'String.append (list 'fmt slice (car args))
                                 (fmt-internal (String.substring s offs len)
                                               (cdr args)))))))))

(defmacro fmt [s :rest args]
  (fmt-internal s args))
