;; This file contains examples of unsolved bugs

(load "Debug.carp")
(project-set! "printAST" "true")
(Debug.sanitize-addresses)

;; UNSOLVED BUG A
;;; Ranges of non-numbers (bug)
;;(defn main [] (IO.println &(Array.str &(Array.range @"hej" @"svej" @"a"))))

;; UNSOLVED BUG B
;; ;; When enabling more interfaces like
;; (definterface inc (Fn [a] a))
;; ;; the following code doesn't figure out all the type variables:
;; (defn f [x] (=> x inc inc inc))
;; ;; This code works though:
;; (defn f [x] (=> x inc inc))
;; ;; which means that it's the concretizer that has run too few times.
;; ;; Running it until nothing changes should be the fix.

;; UNSOLVED BUG C
;; (defn f [] (the Blurgh 123))

;; BUG D
(defn faulty-repeat [n inpt]
    (let [str ""]
      (do
        (for [i 0 n]
          (set! &str &(append @str @inpt)))
        @str)))

(defn main []
  (let [strings (faulty-.repeat 20 "x")]
    (IO.println &strings)))

;; BUG E
;; Fails to find the correct Array.str when calling (println* &ints)
;; (use Array)

;; (deftype Age [x Int])

;; (defn main []
;;   (let-do [ints [10 3 75 40]
;;            ages [(Age.init 10) (Age.init 3) (Age.init 75) (Age.init 40)]]
;;     (println* &ints) ;; if this line is removed it works
;;     (println* &ages)
;;     ))
