(import IO)
(import Int)
(import Array)

(defmodule ArrayExtension
  (defn fmap [f a] (Array.map f a))
  )

(deftype Box [x Int])

(defmodule Box
  (defn fmap [f box] (Box.set-x box (f (Box.x box)))))

(import Box)
(import ArrayExtension)

;;(defn higherOrder [x] (fmap inc x))

(defn main []
  (do
    (println (str (Box.x (fmap inc (Box.init 100)))))
    (println (str (Box.x (Box.fmap inc (Box.init 100)))))
    (println (str (ArrayExtension.fmap inc [10 20 30 40 50])))
    (println (str (fmap inc [10 20 30 40 50])))
    (println (Array.str (fmap inc [10 20 30 40 50])))
    (println (Array.str (ArrayExtension.fmap inc [10 20 30 40 50])))
    ))

(build)
(run)
