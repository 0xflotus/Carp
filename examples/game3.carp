(import gl)

(defn draw-ship [ship]
  (let [pos (get-shipPos ship)]
    (draw-rect (get-V2X pos)
               (get-V2Y pos)
               0.1f
               0.1f)))

(defstruct Ship [shipPos :Vec2])

(defn generate-ships []
  [(Ship (Vec2 0.0f -0.6f))
   (Ship (Vec2 0.3f -0.2f))
   (Ship (Vec2 0.4f -0.3f))
   (Ship (Vec2 0.1f 0.2f))
   (Ship (Vec2 -0.3f 0.5f))])

(defn draw []
  (do
    (draw-line 0.0f 0.0f (dtof (cos (glfwGetTime))) 0.9f)
    (let [ships (generate-ships)]
      (domap draw-ship (ref ships)))))

(defn app []
  (glfw-app "CARP (game 3)" draw default-on-keys))


