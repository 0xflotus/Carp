(load "GLFW.carp")
(use GLFW)

(load "OldOpenGL.carp")
(use OpenGL)

(defn t []
  (Double.to-float (get-time)))

(defn-do main []
  (let-do [_ (init)
           window (create-window 400 300 (cstr "GLFW <3 CARP") NULL NULL)]
    (make-context-current window)
    (while (= 0 (window-should-close window))
      (do
        (clear-color 1.0f 0.5f 0.2f 1.0f)
        (clear GL_COLOR_BUFFER_BIT)
        (color3f 0.0f 0.0f 0.0f)
        (line-width 2.5f)
        (begin GL_LINES)
        (vertex3f 0.0f 0.0f 0.0f)
        (vertex3f (Float.cos (t)) (Float.sin (t)) 0.0f)
        (end)
        (swap-buffers window)
        (poll-events))))
  0)
