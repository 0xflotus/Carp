(use IO)
(use Int)
(use Float)
(use Double)
(use Array)
;; (use System)
;; (use String)
;; (use Char)
;; (use Bool)

;; (defn main []
;;   (do
;;     (println &(str 3.0f))
;;     (println &(str 123))))

(project-set! printAST "true")

;; (deftype Blah [])

;; (defmodule Ur
;;   (defn f [x]
;;     (str x)))

;; (defn main [] (println (ref (str (ref (Ur.f &[1 2 3]))))))


(defmodule A (defn str [x] (String.str x)))
(defmodule B (defn str [x] (String.str x)))

;; Ur is created first and will not know about any other modules
(defmodule Ur
  (defn stringify [a]
    (str &a)))

;; Young is created later
(deftype Young [age Int])

(defn main []
  (IO.println &(Ur.stringify (Young.init 20))))

(defn g []
  (str "hej"))
