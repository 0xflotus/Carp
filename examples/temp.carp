(import IO)
(import Int)
(import Float)
(import Double)
(import Array)
(import System)
(import String)
(import Char)

(defn square [x]
  (Int.* x x))

(defn even? [x]
  (= (Int.mod x 2) 0))

(defn main []
  (while true
    (let [stuff [3 5 8 9 10]
          after (reduce Int.+ 0 (emap square (filter even? stuff)))]
      (println (ref (Int.str after))))))
