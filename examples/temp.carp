(import IO)
(import Int)
(import Float)
(import Double)
(import Array)
(import System)
(import String)
(import Char)

(defn square [x]
  (Int.* x x))

(defn even? [x]
  (= (Int.mod x 2) 0))

(defn main []
  (let [stuff [1 2 3 4 5 6 7 8 9 10]
        after (emap square (filter even? stuff))]
    (println (refstr &after))))
