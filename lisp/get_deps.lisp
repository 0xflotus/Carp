(defn get-deps (ast)
  (do
    ;;(println (str "visiting " ast))
    (if (dict? ast)
      (if (= :literal (:node ast))
        (if (symbol? (:value ast))
          (if (def? (:value ast))
            (if (ffi? (eval (:value ast)))
              '()
              (do (println (eval (:value ast))) (list (:value ast))))
            (do (println (str (:value ast) " " (type (:value ast)) " not defined")) (list (:value ast))))
          '())
        (mapcat get-deps (values ast)))
      (if (list? ast)
        (mapcat get-deps ast)
        '()))))
