
(defn register-glfw ()
  (let [glfw (load-dylib "libglfw3.dylib")
        gl-constants (load-dylib (str carp-dir "gl-constants/gl_constants.so"))]
    (do
      (reset! header-files (cons "<GLFW/glfw3.h>" header-files))
      (reset! header-files (cons (str "\"" carp-dir "gl-constants/gl_constants.h\"") header-files))
      
      (register glfw "glfwInit" '() :bool)
      (register glfw "glfwCreateWindow" '(:int :int (:ref :string) :GLFWmonitor :GLFWwindow) '(:ref :GLFWwindow))
      (register glfw "glfwMakeContextCurrent" '((:ref :GLFWwindow)) :void)
      (register glfw "glfwTerminate" '() :void)
      (register glfw "glfwPollEvents" '() :void)
      (register glfw "glfwWindowShouldClose" '((:ref :GLFWwindow)) :bool)
      (register glfw "glfwSwapBuffers" '((:ref :GLFWwindow)) :void)
      
      (register glfw "glClearColor" '(:float :float :float :float) :void)
      (register glfw "glClear" '(:int) :void)
      (register glfw "glColor3f" '(:float :float :float) :void)
      (register glfw "glBegin" '(:int) :void)
      (register glfw "glEnd" '() :void)
      (register glfw "glVertex3f" '(:float, :float, :float) :void)

      (register-variable gl-constants "gl_color_buffer_bit" :int)
      (register-variable gl-constants "gl_lines" :int)
      (register-variable gl-constants "gl_line_strip" :int)
      (register-variable gl-constants "gl_triangles" :int)
      
      )))

;; glfwSetKeyCallback(window, key_callback);
;; void key_callback(GLFWwindow* window, int key, int scancode, int action, int mods);;

;; glfwSetCharCallback(window, character_callback);
;; void character_callback(GLFWwindow* window, unsigned int codepoint)

;; glfwSetCursorPosCallback(window, cursor_pos_callback);
;; static void cursor_position_callback(GLFWwindow* window, double xpos, double ypos)

(register-glfw)

(defn set-clear-color ()
  (glClearColor 0.0f 0.95f 0.75f 1.0f))

(defn draw-rect (x y w h)
  (do (glBegin gl-triangles)
      (glVertex3f x y 0.0f)
      (glVertex3f (+ x w) y 0.0f)
      (glVertex3f (+ x w) (+ y h) 0.0f)
      (glVertex3f (+ x w) (+ y h) 0.0f)
      (glVertex3f x (+ y h) 0.0f)
      (glVertex3f x y 0.0f)
      (glEnd)))

