(import gl)

(defn gl-demo ()
  (if (glfwInit)
    (let [window (glfwCreateWindow 640 480 "Yeah!" NULL NULL)]
      (if (null? window)
        (panic! "No window.")
        (do (println "Window OK.")
            (glfwMakeContextCurrent window)
            (while (not (glfwWindowShouldClose window))
              (do
                (glClearColor 0.6f 0.85f 0.85f 1.0f)
                (glClear carp-gl-color-buffer-bit)
                (glColor3f 1.0f 0.9f 0.2f)
                (draw-rect -0.5f -0.5f 1.0f 1.0f)              
                (glfwSwapBuffers window)
                (glfwPollEvents)))
            (println "Time to go.")
            (glfwTerminate))))
    (panic! "Failed to initialize glfw.")))

;;(bake draw-rect)

;(def app-ast (lambda-to-ast (code app)))
;(def app-asta (annotate-ast app-ast))

;;(bake* gl-demo '(draw-rect))
;;(bake-gl-exe)

(bake gl-demo)

