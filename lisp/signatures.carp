;; Set type signatures for primops
;; These signatures are used when compiling to C to ensure correct instantiation of primops in the generics-module

(defmacro set-signature! (sym sig)
  `(meta-set! ~sym :signature '~sig))

;; (defmacro seth (sym)
;;   `(meta-set! ~sym :ok true))

;; (defmacro set-signature! (sym sig)
;;   (list 'meta-set! sym :signature (list 'quote sig)))

(set-signature! array-of-size  (:fn (:int)                          (:Array "T") ))
(set-signature! array-set      (:fn ((:Array "T") :int "T")         (:Array "T") ))
(set-signature! nth            (:fn ((:ref (:Array "T")) :int)      "T"          ))
(set-signature! map            (:fn ((:fn ("a") "a") (:Array "a"))  (:Array "a") ))
(set-signature! map-copy       (:fn ((:fn ("a") "b") (:Array "a"))  (:Array "b") ))

(set-signature! copy           (:fn ((:ref "T"))                    "T"          ))
(set-signature! delete         (:fn ("T")                           :void        ))
(set-signature! str            (:fn :any                            :string      )) ;; TODO: use a list with one :Any instead?
