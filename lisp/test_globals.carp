(tester/set-suite! "globals")

;; char int float double bool string array struct

(deftest global-int
  (do (def the-int 100)
      (bake the-int)
      (assert-eq "100 ; ptr-to-global" (str the-int))
      (reset! the-int 200)
      (gc)
      (assert-eq "200 ; ptr-to-global" (str the-int))))

(deftest global-float
  (do (def the-float 3.14f)
      (bake the-float)
      (assert-eq "3.140000f ; ptr-to-global" (str the-float))
      (reset! the-float 6.2f)
      (gc)
      (assert-eq "6.200000f ; ptr-to-global" (str the-float))))

(deftest global-double
  (do (def the-double 10.0)
      (bake the-double)
      (assert-eq "10.000000 ; ptr-to-global" (str the-double))
      (reset! the-double 20.0)
      (gc)
      (assert-eq "20.000000 ; ptr-to-global" (str the-double))))

(deftest global-bool
  (do (def the-bool true)
      (bake the-bool)
      (assert-eq "true ; ptr-to-global" (str the-bool))
      (reset! the-bool false)
      (gc)
      (assert-eq "false ; ptr-to-global" (str the-bool))))

(deftest global-string
  (do (def the-string @"CrAP")
      (bake the-string)
      (assert-eq "CrAP ; ptr-to-global" (str the-string))
      (reset! the-string @"CARP!")
      (gc)
      (assert-eq "CARP! ; ptr-to-global" (str the-string))))

(deftest global-char
  (do (def the-char \e)
      (bake the-char)
      (assert-eq "\\e ; ptr-to-global" (str the-char))
      (reset! the-char \f)
      (assert-eq "\\f ; ptr-to-global" (str the-char))))

(deftest global-array
  (do (def the-array [1 2 3])
      (bake the-array)
      (assert-eq "[1 2 3] ; ptr-to-global" (str the-array))
      (reset! the-array [4 5 6])
      (assert-eq "[4 5 6] ; ptr-to-global" (str the-array))))

(deftest global-struct
  (do (defstruct TheStruct [theStructValue :int])
      (def the-struct (TheStruct 500))
      (bake the-struct)
      (assert-eq "(TheStruct 500) ; ptr-to-global" (str the-struct))
      (reset! the-struct (TheStruct 600))
      (gc)
      (assert-eq "(TheStruct 600) ; ptr-to-global" (str the-struct))))

(deftest global-complex
  (do (defstruct ComplexStruct [complex (:Array :int)])
      (def the-complex [(ComplexStruct [1 2 3]) (ComplexStruct [4 5 6])])
      (bake the-complex)
      (assert-eq "[(ComplexStruct [1 2 3]) (ComplexStruct [4 5 6])] ; ptr-to-global" (str the-complex))
      (reset! the-complex [(ComplexStruct [7 8 9])])
      (gc)
      (assert-eq "[(ComplexStruct [7 8 9])] ; ptr-to-global" (str the-complex))))

(tester/run-suite "globals")
