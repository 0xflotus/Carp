(reset! echo-signature-after-bake true)
(reset! log-unloading-of-dylibs true)

(when (not carp-dev)
  (do
    ;;(load-lisp (str carp-dir "lisp/glfw_test.carp"))
    (load-lisp (str carp-dir "lisp/examples.carp"))
    nil
    ))

;;(load-gl)

;; (defn delete-1 []
;;   (delete (copy "CARP")))

;; (bake delete-1)



;; (defstruct DeleteMe [deleteThisMember :int])

;; (defn delete-2 []
;;   (delete (DeleteMe 10000)))

;; (bake delete-2)



;; (defn delete-3 []
;;   (delete [1 2 3]))

;; (bake delete-3)



;; (defn delete-4 []
;;   (delete [[] [1] [1 2] [1 2 3]]))

;; (bake delete-4)



