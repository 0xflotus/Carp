(reset! echo-signature-after-bake true)
(reset! log-unloading-of-dylibs true)

(when (not carp-dev)
  (do
    ;;(load-lisp (str carp-dir "lisp/glfw_test.carp"))
    (load-lisp (str carp-dir "lisp/examples.carp"))
    nil
    ))

;;(load-gl)

;; (defstruct Vector
;;   [x :int
;;    n :string
;;    y :int])

;; (defn f [x] (Vector x (+ x 10)))
;; (defn g [] (map-copy f [100 200 300]))


;; (defn test-print-array-of-vector []
;;   (let [vecs [(Vector 1001 (string-copy "AAAAA") 1002)
;;               (Vector 1003 (string-copy "BBBBB") 1004)
;;               (Vector 1005 (string-copy "CCCCC") 1006)]]
;;     ;;(println* vecs)
;;     vecs))

;; (bake test-print-array-of-vector)
;; (test-print-array-of-vector)
