(reset! echo-signature-after-bake true)

(when (not carp-dev)
  (do
    ;;(load-lisp (str carp-dir "lisp/glfw_test.carp"))
    (load-lisp (str carp-dir "lisp/examples.carp"))
    nil
    ))

(defstruct Vec2
  [x :float
   y :float])

(def pos (Vec2 3.4 5.5))

(defstruct Person
  [name :string
   age :int])

(defn me [] (Person "erik" 29))

;;(bake me)

(def me-ast (lambda-to-ast (code me)))
(def me-deps (find-func-deps me-ast false))
(def me-con (gencon me-deps))
(def me-typed (infer-types me-deps nil))

;;(def me-con (gencon me-ast))

(bake me)

(defn peeps []
  [(me) (Person "Klabbe" 53)])

;;(bake peeps)

;; (println (str (map #name (peeps))))
;; (println (str (map #age (peeps))))

