(load "Test.carp")

(use-all Array Test)

(defn main []
  (with-test test
    (assert-true test
                 (= &[1 2 3] &[1 2 3])
                 "= works as expected")
    (assert-false test
                  (= &[1 2 3] &[1 2 3 4])
                  "= works as expected")
    (assert-false test
                  (= &[1 2 3] &[1 2 34])
                  "= works as expected")
    (assert-equal test
                  1
                  (first &[1 2 3])
                  "first works as expected")
    (assert-equal test
                  \c
                  (last &[\a \b \c])
                  "last works as expected")
    (assert-equal test
                  &[3 2 1]
                  &(reverse [1 2 3])
                  "reverse works as expected")
    (assert-equal test
                  10
                  (max &(range 1 10 1))
                  "max works as expected")
    (assert-equal test
                  1
                  (min &(range 1 10 1))
                  "min works as expected")
    (assert-equal test
                  55
                  (sum &(range 1 10 1))
                  "sum works as expected")
    (assert-equal test
                  &[2 3]
                  &(subarray &(range 1 10 1) 1 3)
                  "subarray works as expected")
    (assert-equal test
                  &[1 2 3]
                  &(prefix-array &(range 1 10 1) 3)
                  "prefix-array works as expected")
    (assert-equal test
                  &[8 9 10]
                  &(suffix-array &(range 1 10 1) 7)
                  "suffix-array works as expected")
    (print-test-results test)))
