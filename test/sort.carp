(use Sort)

(load "Test.carp")
(use Test)

(defn main []
  (with-test test
    (let-do [arr [1 3 4 2 6 1]
             exp [1 1 2 3 4 6]]
            (Sort.sort! &arr)
            (assert-equal test
                          &exp
                          &arr
                          "Sort.sort! works with integers"))

    (let-do [arr [1 3 4 2 6 1]
             exp [1 1 2 3 4 6]
             res (Sort.sorted &arr)]
            (assert-equal test
                          &exp
                          &res
                          "Sort.sorted works with integers"))

    (let-do [res (Sort.sort [1 3 4 2 6 1])
             exp [1 1 2 3 4 6]]
            (assert-equal test
                          &exp
                          &res
                          "Sort.sort works with integers"))

    (let-do [arr [1.0 0.8 12.4 3.2]
             exp [0.8 1.0 3.2 12.4]]
            (Sort.sort! &arr)
            (assert-equal test
                          &exp
                          &arr
                          "Sort.sort! works with floats"))

    (let-do [arr [1.0 0.8 12.4 3.2]
             exp [0.8 1.0 3.2 12.4]
             res (Sort.sorted &arr)]
            (assert-equal test
                          &exp
                          &res
                          "Sort.sorted works with floats"))

    (let-do [res (Sort.sort [1.0 0.8 12.4 3.2])
             exp [0.8 1.0 3.2 12.4]]
            (assert-equal test
                          &exp
                          &res
                          "Sort.sort works with floats"))

    (let-do [arr [@"aaac" @"aaaa" @"aaab" @"aaad"]
             exp [@"aaaa" @"aaab" @"aaac" @"aaad"]]
            (Sort.sort! &arr)
            (assert-equal test
                          &exp
                          &arr
                          "Sort.sort! works with strings"))

    (let-do [arr [@"aaac" @"aaaa" @"aaab" @"aaad"]
             exp [@"aaaa" @"aaab" @"aaac" @"aaad"]
             res (Sort.sorted &arr)]
            (assert-equal test
                          &exp
                          &res
                          "Sort.sorted works with strings"))

    (let-do [res (Sort.sort [@"aaac" @"aaaa" @"aaab" @"aaad"])
             exp [@"aaaa" @"aaab" @"aaac" @"aaad"]]
            (assert-equal test
                          &exp
                          &res
                          "Sort.sort works with strings"))

    (let-do [arr [\d \a \c \b]
             exp [\a \b \c \d]]
            (Sort.sort! &arr)
            (assert-equal test
                          &exp
                          &arr
                          "Sort.sort! works with chars"))

    (let-do [arr [\d \a \c \b]
             exp [\a \b \c \d]
             res (Sort.sorted &arr)]
            (assert-equal test
                          &exp
                          &res
                          "Sort.sorted works with chars"))

    (let-do [res (Sort.sort [\d \a \c \b])
             exp [\a \b \c \d]]
            (assert-equal test
                          &exp
                          &res
                          "Sort.sort works with chars"))

    (print-test-results test)))

